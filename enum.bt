//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
void enums(){
    if (fieldName == "GroupName_Role") {
        FSkip(-sizeof(data));
        enum {
            role_Normal =  0,
            role_Idle =  1,
            role_SitFakeDead =  2,
            role_LieFakeDead =  3,
            role_Hypnotized =  4,
            role_LieHypnotized =  5,
            role_standingIdle =  6,
            role_Eating =  7,
            role_Special =  8,
            role_BreakDownDoor =  9,
            role_HangingFakeDead =  10,
            role_SplitInHalf =  11,
            role_Dead =  12,
            role_DeadPosed =  13,
            role_DeadPosed2 =  14,
            role_DeadPosed3 =  15,
        }GroupName_Role;
    }
    else if (findS(fieldName, "DamageType") != -1) {
        FSkip(-sizeof(data));
        enum { 
            DamageType_None = -1,
            DamageType_Minimum = 0,
            DamageType_NormalS = 1,
            DamageType_NormalL = 2,
            DamageType_NormalLL = 3,
            DamageType_Down = 4,
            DamageType_DownBound = 5,
            DamageType_Slam = 6,
            DamageType_SlamBound = 7,
            DamageType_Upper = 8,
            DamageType_HyperUpper = 9,
            DamageType_HyperUpperAir = 10,
            DamageType_Blown = 11,
            DamageType_Collapse = 12,
            DamageType_RollingUpper = 13,
            DamageType_CheckSpin = 14,
            DamageType_Spin = 15,
            DamageType_DiagonalBlown = 16,
            DamageType_WindS = 17,
            DamageType_WindL = 18,
            DamageType_SnatchRelase = 19,
            DamageType_StraightBlown = 20,
            DamageType_Tremor = 21,
            DamageType_Inhale = 22,
            DamageType_MotionContinue = 23,
            DamageType_Explosion = 24
        } DamageType;
    }
    else if (findS(fieldName, "CmdType") != -1) {
        FSkip(-sizeof(data));
        enum { 
            CommandFsm_None = 0,
            CommandFsm_AtkA = 1,
            CommandFsm_AtkX = 2,
            CommandFsm_AtkXorA = 3,
            CommandFsm_AtkXA = 4,
            CommandFsm_AtkAR1 = 5,
            CommandFsm_AtkXR1 = 6,
            CommandFsm_AtkXAR1 = 7,
            CommandFsm_AtkR1 = 8,
            CommandFsm_AtkR2 = 9,
            CommandFsm_AtkR2On = 10,
            CommandFsm_AtkR2Off = 11,
            CommandFsm_AtkR1Release = 12,
            CommandFsm_AtkR2Release = 13,
            CommandFsm_AtkAOn = 14,
            CommandFsm_AtkXOn = 15,
            CommandFsm_AtkXAOn = 16,
            CommandFsm_AtkAOff = 17,
            CommandFsm_AtkXOff = 18,
            CommandFsm_AtkARelease = 19,
            CommandFsm_AtkXRelease = 20,
            CommandFsm_WpStart = 21,
            CommandFsm_WpStartXAR = 22,
            CommandFsm_WpEnd = 23,
            CommandFsm_Escape = 24,
            CommandFsm_EscapeR = 25,
            CommandFsm_EscapeL = 26,
            CommandFsm_EscapeF = 27,
            CommandFsm_EscapeB = 28,
            CommandFsm_EscapeAnalogl = 29,
            CommandFsm_Dash = 30,
            CommandFsm_Guard = 31,
            CommandFsm_Sit = 32,
            CommandFsm_Ride = 33,
            CommandFsm_Tsuta = 34,
            CommandFsm_TsutaEnd = 35,
            CommandFsm_TsutaDash = 36,
            CommandFsm_WireUp = 37,
            CommandFsm_WireFront = 38,
            CommandFsm_WireTarget = 39,
            CommandFsm_WireStopEnd = 40,
            CommandFsm_WireEscape = 41,
            CommandFsm_WireUpGunner = 42,
            CommandFsm_WireFrontGunner = 43,
            CommandFsm_PopAction = 44,
            CommandFsm_GimmickPopAction = 45,
            CommandFsm_GimmickCancel = 46,
            CommandFsm_NpcFacilityPopAction = 47,
            CommandFsm_LongJump = 48,
            CommandFsm_EnvCreaturePopAction = 49,
            CommandFsm_ItemPopAction = 50,
            CommandFsm_AtkR1Delay = 51,
            CommandFsm_AtkAwithoutR1 = 52,
            CommandFsm_AtkXwithoutR1 = 53,
            CommandFsm_AtkXAwithoutR1 = 54,
            CommandFsm_AtkAwithoutX = 55,
            CommandFsm_AtkXwithoutA = 56,
            CommandFsm_AtkAwithoutXandR1 = 57,
            CommandFsm_AtkXwithoutAandR1 = 58,
            CommandFsm_AtkAxislRightX = 59,
            CommandFsm_AtkAxislLeftX = 60,
            CommandFsm_AtkAxislFrontX = 61,
            CommandFsm_AtkAxislBackX = 62,
            CommandFsm_AtkAxislFrontOrNeutralX = 63,
            CommandFsm_AtkAxislLRF3WayRightX = 64,
            CommandFsm_AtkAxislLRF3WayLeftX = 65,
            CommandFsm_AtkAxislLRF3WayFrontX = 66,
            CommandFsm_AtkAxislLRB3WayRightX = 67,
            CommandFsm_AtkAxislLRB3WayLeftX = 68,
            CommandFsm_AtkAxislLRB3WayBackX = 69,
            CommandFsm_AtkAxislFB2WayFrontX = 70,
            CommandFsm_AtkAxislFB2WayBackX = 71,
            CommandFsm_AtkAxislLR2WayRightX = 72,
            CommandFsm_AtkAxislLR2WayLeftX = 73,
            CommandFsm_AtkAnaloglUpX = 74,
            CommandFsm_AtkAnaloglDownX = 75,
            CommandFsm_AtkAnaloglLeftX = 76,
            CommandFsm_AtkAnaloglRightX = 77,
            CommandFsm_AtkAxislRightA = 78,
            CommandFsm_AtkAxislLeftA = 79,
            CommandFsm_AtkAxislFrontA = 80,
            CommandFsm_AtkAxislBackA = 81,
            CommandFsm_AtkAxislLRF3WayRightA = 82,
            CommandFsm_AtkAxislLRF3WayLeftA = 83,
            CommandFsm_AtkAxislLRF3WayFrontA = 84,
            CommandFsm_AtkAxislLRB3WayRightA = 85,
            CommandFsm_AtkAxislLRB3WayLeftA = 86,
            CommandFsm_AtkAxislLRB3WayBackA = 87,
            CommandFsm_AtkAxislFB2WayFrontA = 88,
            CommandFsm_AtkAxislFB2WayFrontOrNeutralA = 89,
            CommandFsm_AtkAxislFB2WayBackA = 90,
            CommandFsm_AtkAxislLR2WayRightA = 91,
            CommandFsm_AtkAxislLR2WayLeftA = 92,
            CommandFsm_AtkAnaloglUpA = 93,
            CommandFsm_AtkAnaloglDownA = 94,
            CommandFsm_AtkAnaloglLeftA = 95,
            CommandFsm_AtkAnaloglRightA = 96,
            CommandFsm_AtkAxislRightXA = 97,
            CommandFsm_AtkAxislLeftXA = 98,
            CommandFsm_AtkAxislFrontXA = 99,
            CommandFsm_AtkAxislBackXA = 100,
            CommandFsm_AtkAxislLRF3WayRightXA = 101,
            CommandFsm_AtkAxislLRF3WayLeftXA = 102,
            CommandFsm_AtkAxislLRF3WayFrontXA = 103,
            CommandFsm_AtkAxislLRB3WayRightXA = 104,
            CommandFsm_AtkAxislLRB3WayLeftXA = 105,
            CommandFsm_AtkAxislLRB3WayBackXA = 106,
            CommandFsm_AtkAxislFB2WayFrontXA = 107,
            CommandFsm_AtkAxislFB2WayBackXA = 108,
            CommandFsm_AtkAxislLR2WayRightXA = 109,
            CommandFsm_AtkAxislLR2WayLeftXA = 110,
            CommandFsm_AtkAnaloglUpXA = 111,
            CommandFsm_AtkAnaloglDownXA = 112,
            CommandFsm_AtkAnaloglLeftXA = 113,
            CommandFsm_AtkAnaloglRightXA = 114,
            CommandFsm_AtkAxislRightR1 = 115,
            CommandFsm_AtkAxislLeftR1 = 116,
            CommandFsm_AtkAxislFrontR1 = 117,
            CommandFsm_AtkAxislBackR1 = 118,
            CommandFsm_AtkAxislLRF3WayRightR1 = 119,
            CommandFsm_AtkAxislLRF3WayLeftR1 = 120,
            CommandFsm_AtkAxislLRF3WayFrontR1 = 121,
            CommandFsm_AtkAxislLRB3WayRightR1 = 122,
            CommandFsm_AtkAxislLRB3WayLeftR1 = 123,
            CommandFsm_AtkAxislLRB3WayBackR1 = 124,
            CommandFsm_AtkAxislFB2WayFrontR1 = 125,
            CommandFsm_AtkAxislFB2WayBackR1 = 126,
            CommandFsm_AtkAxislLR2WayRightR1 = 127,
            CommandFsm_AtkAxislLR2WayLeftR1 = 128,
            CommandFsm_AtkAnaloglUpR1 = 129,
            CommandFsm_AtkAnaloglDownR1 = 130,
            CommandFsm_AtkAnaloglLeftR1 = 131,
            CommandFsm_AtkAnaloglRightR1 = 132,
            CommandFsm_AtkAxislRightXR1 = 133,
            CommandFsm_AtkAxislLeftXR1 = 134,
            CommandFsm_AtkAxislFrontXR1 = 135,
            CommandFsm_AtkAxislBackXR1 = 136,
            CommandFsm_AtkAnaloglXA = 137,
            CommandFsm_AtkAnaloglA = 138,
            CommandFsm_AtkAnaloglX = 139,
            CommandFsm_AtkAnaloglR1 = 140,
            CommandFsm_AtkNeutralXA = 141,
            CommandFsm_AtkNeutralA = 142,
            CommandFsm_AtkNeutralX = 143,
            CommandFsm_AtkNeutralR1 = 144,
            CommandFsm_ItemY = 145,
            CommandFsm_ItemYOn = 146,
            CommandFsm_ItemYOff = 147,
            CommandFsm_KunaiAimZLOn = 148,
            CommandFsm_RideDriftOn = 149,
            CommandFsm_RideDriftOff = 150,
            CommandFsm_RideJump = 151,
            CommandFsm_SlidingJump = 152,
            CommandFsm_Marionette = 153,
            CommandFsm_OtomoPopAction = 154,
            CommandFsm_AtkRB = 155,
            CommandFsm_HagitoriPopAction = 156,
            CommandFsm_TrapRemovePopAction = 157,
            CommandFsm_LongJumpPointRelease = 158,
            CommandFsm_Fishing = 159,
            CommandFsm_DropEnvCreature = 160,
            CommandFsm_AnyTrigger = 161,
            CommandFsm_OtomoCommunicationStart = 162,
            CommandFsm_OtomoCommunicationA = 163,
            CommandFsm_OtomoCommunicationB = 164,
            CommandFsm_OtomoCommunicationX = 165,
            CommandFsm_OtomoCommunicationY = 166,
            CommandFsm_AtkR1ZR = 167,
            CommandFsm_AtkR1Off = 168,
            CommandFsm_LobbyWireUp = 169,
            CommandFsm_LobbyWireFront = 170,
            CommandFsm_LobbyWireTarget = 171,
            CommandFsm_Decide = 172,
            CommandFsm_Cancel = 173,
            CommandFsm_AtkR1On = 174,
            CommandFsm_Gimmick_Hold = 175,
            CommandFsm_Gimmick_HoldCancel = 176,
            CommandFsm_ActionStart = 177,
            CommandFsm_ActionEnd = 178,
            CommandFsm_ItemTake = 179,
            CommandFsm_AtkXAR1_ZR = 180,
            CommandFsm_AtkXAorR1 = 181,
            CommandFsm_GimmickShotTrg_AorZR = 182,
            CommandFsm_GimmickShotTrg_X = 183,
            CommandFsm_GimmickShotTrg_Y = 184,
            CommandFsm_GimmickShotOn_AorZR = 185,
            CommandFsm_GimmickShotOn_X = 186,
            CommandFsm_GimmickShotOn_Y = 187,
            CommandFsm_AtkXAorR1Trg = 188,
            CommandFsm_GuardTrg = 189,
            CommandFsm_AtkZRZL = 190,
            CommandFsm_AtkXOnOriginal = 191,
            CommandFsm_AtkAOnOriginal = 192,
            CommandFsm_PopActionOn = 193,
            CommandFsm_ActionB = 194,
            CommandFsm_CancelNoDelay = 195,
        } CmdType;
    }    
    else if (findS(fieldName, "_ConditionCommonEnum") != -1) {
        FSkip(-sizeof(data));
        enum { 
            CommandConditionCommon_None = 0,
            CommandConditionCommon_CmnStaminaEnoughEscape = 1,
            CommandConditionCommon_CmnHunterWireNotEmpty = 2,
            CommandConditionCommon_CmnHunterWireOverTwo = 3,
            CommandConditionCommon_CmnHunterWireNotEmptyStaminaEnoughEscape = 4,
            CommandConditionCommon_CmnBowgunRecoilMotionSpeedTypeFlyNotNone = 5,
            CommandConditionCommon_CmnPlayerStateIsStand = 6,
            CommandConditionCommon_CmnBallistaTutorial_Hold = 7,
            CommandConditionCommon_CmnBallistaTutorial_Cancel = 8,
            CommandConditionCommon_CmnHunterWireEmptyAndIsStand = 9,
            CommandConditionCommon_CmnHunterWireNotEmptyOrEmptyStand = 10,
            CommandConditionCommon_CmnOnGround = 11,
        } _ConditionCommonEnum;
    }
}